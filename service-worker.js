"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["index.html","f3b5c79a3e204e0810ee2eaabfc8ab18"],["static/css/main.d0e12747.css","a5fa030c0526335d4fbdd8bf47be4814"],["static/js/main.dbad6875.js","bddda7c4e7a8acc71a5deff090260677"],["static/media/camping.644e4b54.jpg","644e4b54035147d05aaba4148463ec8e"],["static/media/directions.5a633615.png","5a6336158fa9f1de2e5e9d069841df21"],["static/media/environment.10ad9e57.jpg","10ad9e57b15b79d02061c01f9115dc64"],["static/media/fb.aa5d7172.svg","aa5d7172a0a8a846520e711f536489ac"],["static/media/food-drinks.211146ef.jpg","211146efa93e1d5fb38c91ffd29435ff"],["static/media/glyphicons-halflings-regular.448c34a5.woff2","448c34a56d699c29117adc64c43affeb"],["static/media/glyphicons-halflings-regular.89889688.svg","89889688147bd7575d6327160d64e760"],["static/media/glyphicons-halflings-regular.e18bbf61.ttf","e18bbf611f2a2e43afc071aa2f4e1512"],["static/media/glyphicons-halflings-regular.f4769f9b.eot","f4769f9bdb7466be65088239c12046d1"],["static/media/glyphicons-halflings-regular.fa277232.woff","fa2772327f55d8198301fdb8bcfc8158"],["static/media/google-map.2c2264ae.png","2c2264ae416dbe7fac46bfd586ce3ac4"],["static/media/instagram.6ab55dc7.svg","6ab55dc7ce8f9cb6034c61323bb84fa1"],["static/media/landing.f61dccf8.jpg","f61dccf878dabfe1c5d65c82d2f91d95"],["static/media/map.c5d84687.png","c5d84687f99b7a284d582738bc0ef96c"],["static/media/poster.e4a2da36.jpg","e4a2da363b3e2d3ea36a7c22f91ad850"],["static/media/sample-activity.a2845c3c.jpg","a2845c3c265b9cdbb426224adcde22c2"],["static/media/sample-artist.60068c81.png","60068c813652b97da341853619ad0a10"],["static/media/sponsors.29b1563a.png","29b1563ad46deee02fb790709becb478"],["static/media/ticket.368df8d0.svg","368df8d004e24078075c64e910aefbff"],["static/media/twitter.d06c6d98.svg","d06c6d985217e597a6b674a5af9aabe5"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),c.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),c=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),c]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);a=urlsToCacheKeys.has(t);a||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted([],e.request.url)&&(t=new URL("https://beta.afrobananarepublic.com/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});